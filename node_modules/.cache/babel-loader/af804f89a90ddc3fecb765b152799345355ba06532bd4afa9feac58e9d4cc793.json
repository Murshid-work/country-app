{"ast":null,"code":"var _jsxFileName = \"/Users/A-10347/Documents/VS-code-files/country-app/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const regex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!regex.test(password)) {\n      setError(\"Password must be at least 8 characters with 1 uppercase, 1 number, and 1 symbol\");\n    } else {\n      setError(\"\");\n      navigate(\"/home\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"login-container d-flex flex-column justify-content-center align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Username or email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        label: \"Keep me signed in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: \"btn-dark w-100\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger mt-2\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Form","Button","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","regex","test","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Control","type","placeholder","value","onChange","target","required","Check","label","_c","$RefreshReg$"],"sources":["/Users/A-10347/Documents/VS-code-files/country-app/src/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Form, Button } from \"react-bootstrap\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const regex = /^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d@$!%*?&]{8,}$/;\n    if (!regex.test(password)) {\n      setError(\n        \"Password must be at least 8 characters with 1 uppercase, 1 number, and 1 symbol\"\n      );\n    } else {\n      setError(\"\");\n      navigate(\"/home\");\n    }\n  };\n\n  return (\n    <Container className=\"login-container d-flex flex-column justify-content-center align-items-center\">\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <h2>Sign In</h2>\n        <Form.Group controlId=\"email\">\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Username or email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"password\">\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </Form.Group>\n        <Form.Check label=\"Keep me signed in\" />\n        <Button type=\"submit\" className=\"btn-dark w-100\">\n          Sign In\n        </Button>\n        {error && <div className=\"text-danger mt-2\">{error}</div>}\n      </Form>\n    </Container>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}