{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchCountriesAPI } from \"./countryApi\";\nexport const fetchCountries = createAsyncThunk(\"countries/fetchCountries\", async () => {\n  return await fetchCountriesAPI();\n});\nconst countrySlice = createSlice({\n  name: \"countries\",\n  initialState: {\n    all: [],\n    filtered: [],\n    visibleCount: 6,\n    region: \"All\"\n  },\n  reducers: {\n    filterByRegion: (state, action) => {\n      state.region = action.payload;\n      state.filtered = action.payload === \"All\" ? state.all : state.all.filter(c => c.region === action.payload);\n      state.visibleCount = 6;\n    },\n    loadMore: state => {\n      state.visibleCount += 6;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchCountries.fulfilled, (state, action) => {\n      state.all = action.payload;\n      state.filtered = action.payload;\n    });\n  }\n});\nexport const {\n  filterByRegion,\n  loadMore\n} = countrySlice.actions;\nexport const selectFilteredCountries = state => state.countries.filtered;\nexport default countrySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchCountriesAPI","fetchCountries","countrySlice","name","initialState","all","filtered","visibleCount","region","reducers","filterByRegion","state","action","payload","filter","c","loadMore","extraReducers","builder","addCase","fulfilled","actions","selectFilteredCountries","countries","reducer"],"sources":["/Users/A-10347/Documents/VS-code-files/country-app/src/features/countrySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchCountriesAPI } from \"./countryApi\";\n\nexport const fetchCountries = createAsyncThunk(\n  \"countries/fetchCountries\",\n  async () => {\n    return await fetchCountriesAPI();\n  }\n);\nconst countrySlice = createSlice({\n  name: \"countries\",\n  initialState: {\n    all: [],\n    filtered: [],\n    visibleCount: 6,\n    region: \"All\",\n  },\n  reducers: {\n    filterByRegion: (state, action) => {\n      state.region = action.payload;\n      state.filtered =\n        action.payload === \"All\"\n          ? state.all\n          : state.all.filter((c) => c.region === action.payload);\n      state.visibleCount = 6;\n    },\n    loadMore: (state) => {\n      state.visibleCount += 6;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCountries.fulfilled, (state, action) => {\n      state.all = action.payload;\n      state.filtered = action.payload;\n    });\n  },\n});\n\nexport const { filterByRegion, loadMore } = countrySlice.actions;\nexport const selectFilteredCountries = (state) => state.countries.filtered;\nexport default countrySlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,OAAO,MAAMC,cAAc,GAAGF,gBAAgB,CAC5C,0BAA0B,EAC1B,YAAY;EACV,OAAO,MAAMC,iBAAiB,CAAC,CAAC;AAClC,CACF,CAAC;AACD,MAAME,YAAY,GAAGJ,WAAW,CAAC;EAC/BK,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,CAAC;IACfC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACC,OAAO;MAC7BF,KAAK,CAACL,QAAQ,GACZM,MAAM,CAACC,OAAO,KAAK,KAAK,GACpBF,KAAK,CAACN,GAAG,GACTM,KAAK,CAACN,GAAG,CAACS,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,MAAM,KAAKI,MAAM,CAACC,OAAO,CAAC;MAC1DF,KAAK,CAACJ,YAAY,GAAG,CAAC;IACxB,CAAC;IACDS,QAAQ,EAAGL,KAAK,IAAK;MACnBA,KAAK,CAACJ,YAAY,IAAI,CAAC;IACzB;EACF,CAAC;EACDU,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAClB,cAAc,CAACmB,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACN,GAAG,GAAGO,MAAM,CAACC,OAAO;MAC1BF,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,cAAc;EAAEM;AAAS,CAAC,GAAGd,YAAY,CAACmB,OAAO;AAChE,OAAO,MAAMC,uBAAuB,GAAIX,KAAK,IAAKA,KAAK,CAACY,SAAS,CAACjB,QAAQ;AAC1E,eAAeJ,YAAY,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}